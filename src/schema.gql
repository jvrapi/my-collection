# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddCardInput {
  cardId: String!
  quantity: Float!
}

type AuthModel {
  token: String!
}

input AuthenticateUserInput {
  password: String!
  username: String!
}

type Card {
  addedAt: DateTime!
  id: String!
  imageUrl: String!
  name: String!
  quantity: Float!
  updatedAt: DateTime!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  username: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input GetCardsFilters {
  name: String!
}

input GetSetsInput {
  limit: Int!
  page: Int!
}

type Mutation {
  addCard(data: AddCardInput!): Card!
  authenticateUser(data: AuthenticateUserInput!): AuthModel!
  createUser(data: CreateUserInput!): UserCreated!
  updateCards(data: [UpdateCardsInput!]!): [Card!]!
  updateUser(data: UpdateUserInput!): User!
}

type Pagination {
  currentPage: Int!
  lastPage: Int!
  nextPage: Int
  prevPage: Int
  totalItems: Int!
}

type Query {
  cards(data: GetCardsFilters!): [ScryfallCardModel!]!
  sets(data: GetSetsInput!): ScryfallSetModel!
  user: User!
}

type ScryfallCardModel {
  id: String!
  imageUrl: String!
  name: String!
}

type ScryfallSetModel {
  items: [Set!]!
  pagination: Pagination!
}

type Set {
  code: String!
  iconUrl: String!
  id: String!
  name: String!
  releasedAt: String!
}

input UpdateCardsInput {
  cardId: String!
  quantity: Float!
}

input UpdateUserInput {
  email: String!
  name: String!
  username: String!
}

type User {
  cards: [Card!]!
  createdAt: DateTime!
  email: String!
  id: String!
  name: String!
  updatedAt: DateTime!
  username: String!
}

type UserCreated {
  id: String!
}